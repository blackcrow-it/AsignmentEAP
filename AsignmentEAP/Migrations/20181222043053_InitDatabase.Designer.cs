// <auto-generated />
using System;
using AsignmentEAP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsignmentEAP.Migrations
{
    [DbContext(typeof(AsignmentEAPContext))]
    [Migration("20181222043053_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsignmentEAP.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("AsignmentEAP.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("AsignmentEAP.Models.Mark", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("Assignment");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Practice");

                    b.Property<int>("Theory");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("Mark");
                });

            modelBuilder.Entity("AsignmentEAP.Models.StudentInformation", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDay");

                    b.Property<int>("ClassId");

                    b.Property<DateTime>("CreateAt");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("AccountId");

                    b.HasIndex("ClassId");

                    b.ToTable("StudentInformation");
                });

            modelBuilder.Entity("AsignmentEAP.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("AsignmentEAP.Models.Mark", b =>
                {
                    b.HasOne("AsignmentEAP.Models.Subject", "Subject")
                        .WithMany("Marks")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsignmentEAP.Models.StudentInformation", b =>
                {
                    b.HasOne("AsignmentEAP.Models.Account", "Account")
                        .WithOne("StudentInformation")
                        .HasForeignKey("AsignmentEAP.Models.StudentInformation", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsignmentEAP.Models.Classroom", "Classroom")
                        .WithMany("StudentInformations")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsignmentEAP.Models.Subject", b =>
                {
                    b.HasOne("AsignmentEAP.Models.Account")
                        .WithMany("Subjects")
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
